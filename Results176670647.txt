Excluding: com.kenfogel.performance.loaders.SequenceTests_jmh.do02aLoadArray, does not match MapTests_jmh
Excluding: com.kenfogel.performance.loaders.SequenceTests_jmh.do02bAccessFirstElementArray, does not match MapTests_jmh
Excluding: com.kenfogel.performance.loaders.SequenceTests_jmh.do02cAccessLastElementArray, does not match MapTests_jmh
Excluding: com.kenfogel.performance.loaders.SequenceTests_jmh.do02dAccessMiddleElementArray, does not match MapTests_jmh
Excluding: com.kenfogel.performance.loaders.SequenceTests_jmh.do03aLoadArrayList, does not match MapTests_jmh
Excluding: com.kenfogel.performance.loaders.SequenceTests_jmh.do03bAccessFirstElementArrayList, does not match MapTests_jmh
Excluding: com.kenfogel.performance.loaders.SequenceTests_jmh.do03cAccessLastElementArrayList, does not match MapTests_jmh
Excluding: com.kenfogel.performance.loaders.SequenceTests_jmh.do03dAccessMiddleElementArrayList, does not match MapTests_jmh
Excluding: com.kenfogel.performance.loaders.SequenceTests_jmh.do03eInsertFirstElementArrayList, does not match MapTests_jmh
Excluding: com.kenfogel.performance.loaders.SequenceTests_jmh.do03fInsertLastElementArrayList, does not match MapTests_jmh
Excluding: com.kenfogel.performance.loaders.SequenceTests_jmh.do03gInsertMiddleElementArrayList, does not match MapTests_jmh
Excluding: com.kenfogel.performance.loaders.SequenceTests_jmh.do04aLoadDeque, does not match MapTests_jmh
Excluding: com.kenfogel.performance.loaders.SequenceTests_jmh.do04bAccessFirstElementDeque, does not match MapTests_jmh
Excluding: com.kenfogel.performance.loaders.SequenceTests_jmh.do04cAccessLastElementDeque, does not match MapTests_jmh
Excluding: com.kenfogel.performance.loaders.SequenceTests_jmh.do04dInsertFirstElementDeque, does not match MapTests_jmh
Excluding: com.kenfogel.performance.loaders.SequenceTests_jmh.do04eInsertLastElementDeque, does not match MapTests_jmh
Excluding: com.kenfogel.performance.loaders.SequenceTests_jmh.do05aLoadLinkedList, does not match MapTests_jmh
Excluding: com.kenfogel.performance.loaders.SequenceTests_jmh.do05bAccessFirstElementLinkedList, does not match MapTests_jmh
Excluding: com.kenfogel.performance.loaders.SequenceTests_jmh.do05cAccessLastElementLinkedList, does not match MapTests_jmh
Excluding: com.kenfogel.performance.loaders.SequenceTests_jmh.do05dAccessMiddleElementLinkedList, does not match MapTests_jmh
Excluding: com.kenfogel.performance.loaders.SequenceTests_jmh.do05eInsertFirstElementLinkedList, does not match MapTests_jmh
Excluding: com.kenfogel.performance.loaders.SequenceTests_jmh.do05fInsertLastElementLinkedList, does not match MapTests_jmh
Excluding: com.kenfogel.performance.loaders.SequenceTests_jmh.do05gInsertMiddleElementLinkedList, does not match MapTests_jmh
# JMH version: 1.37
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-LTS
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-21.0.2.13-hotspot\bin\java.exe
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 2 s each
# Measurement: 3 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.kenfogel.performance.loaders.MapTests_jmh.do01LoadHashMap

# Run progress: 0.00% complete, ETA 00:02:24
Forking using command: [C:\Program Files\Eclipse Adoptium\jdk-21.0.2.13-hotspot\bin\java.exe, -XX:+UnlockDiagnosticVMOptions, -XX:+UnlockExperimentalVMOptions, -DcompilerBlackholesEnabled=true, -XX:CompileCommandFile=C:\Users\omni_\AppData\Local\Temp\jmh10768649944801232063compilecommand, -cp, "target\javazone.jar", org.openjdk.jmh.runner.ForkedMain, 127.0.0.1, 61824]
# Fork: 1 of 2
System.gc() executed
# Warmup Iteration   1: 32493.915 ns/op
System.gc() executed
# Warmup Iteration   2: 30213.300 ns/op
System.gc() executed
# Warmup Iteration   3: 27813.063 ns/op
System.gc() executed
Iteration   1: 27999.097 ns/op
System.gc() executed
Iteration   2: 27355.183 ns/op
System.gc() executed
Iteration   3: 28743.113 ns/op

# Run progress: 8.33% complete, ETA 00:02:58
Forking using command: [C:\Program Files\Eclipse Adoptium\jdk-21.0.2.13-hotspot\bin\java.exe, -XX:+UnlockDiagnosticVMOptions, -XX:+UnlockExperimentalVMOptions, -DcompilerBlackholesEnabled=true, -XX:CompileCommandFile=C:\Users\omni_\AppData\Local\Temp\jmh10768649944801232063compilecommand, -cp, "target\javazone.jar", org.openjdk.jmh.runner.ForkedMain, 127.0.0.1, 61824]
# Fork: 2 of 2
System.gc() executed
# Warmup Iteration   1: 29121.766 ns/op
System.gc() executed
# Warmup Iteration   2: 26352.951 ns/op
System.gc() executed
# Warmup Iteration   3: 26654.877 ns/op
System.gc() executed
Iteration   1: 25775.056 ns/op
System.gc() executed
Iteration   2: 26845.575 ns/op
System.gc() executed
Iteration   3: 27242.128 ns/op


Result "com.kenfogel.performance.loaders.MapTests_jmh.do01LoadHashMap":
  27326.692 ±(99.9%) 2833.585 ns/op [Average]
  (min, avg, max) = (25775.056, 27326.692, 28743.113), stdev = 1010.484
  CI (99.9%): [24493.107, 30160.277] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-LTS
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-21.0.2.13-hotspot\bin\java.exe
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 2 s each
# Measurement: 3 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.kenfogel.performance.loaders.MapTests_jmh.do02AddToHashMap

# Run progress: 16.67% complete, ETA 00:02:41
Forking using command: [C:\Program Files\Eclipse Adoptium\jdk-21.0.2.13-hotspot\bin\java.exe, -XX:+UnlockDiagnosticVMOptions, -XX:+UnlockExperimentalVMOptions, -DcompilerBlackholesEnabled=true, -XX:CompileCommandFile=C:\Users\omni_\AppData\Local\Temp\jmh10768649944801232063compilecommand, -cp, "target\javazone.jar", org.openjdk.jmh.runner.ForkedMain, 127.0.0.1, 61832]
# Fork: 1 of 2
System.gc() executed
# Warmup Iteration   1: 173.207 ns/op
System.gc() executed
# Warmup Iteration   2: 138.940 ns/op
System.gc() executed
# Warmup Iteration   3: 139.764 ns/op
System.gc() executed
Iteration   1: 136.240 ns/op
System.gc() executed
Iteration   2: 144.283 ns/op
System.gc() executed
Iteration   3: 129.275 ns/op

# Run progress: 25.00% complete, ETA 00:02:25
Forking using command: [C:\Program Files\Eclipse Adoptium\jdk-21.0.2.13-hotspot\bin\java.exe, -XX:+UnlockDiagnosticVMOptions, -XX:+UnlockExperimentalVMOptions, -DcompilerBlackholesEnabled=true, -XX:CompileCommandFile=C:\Users\omni_\AppData\Local\Temp\jmh10768649944801232063compilecommand, -cp, "target\javazone.jar", org.openjdk.jmh.runner.ForkedMain, 127.0.0.1, 61832]
# Fork: 2 of 2
System.gc() executed
# Warmup Iteration   1: 162.803 ns/op
System.gc() executed
# Warmup Iteration   2: 121.145 ns/op
System.gc() executed
# Warmup Iteration   3: 129.297 ns/op
System.gc() executed
Iteration   1: 137.468 ns/op
System.gc() executed
Iteration   2: 126.466 ns/op
System.gc() executed
Iteration   3: 130.425 ns/op


Result "com.kenfogel.performance.loaders.MapTests_jmh.do02AddToHashMap":
  134.026 ±(99.9%) 18.373 ns/op [Average]
  (min, avg, max) = (126.466, 134.026, 144.283), stdev = 6.552
  CI (99.9%): [115.653, 152.399] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-LTS
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-21.0.2.13-hotspot\bin\java.exe
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 2 s each
# Measurement: 3 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.kenfogel.performance.loaders.MapTests_jmh.do03HashMapSearch

# Run progress: 33.33% complete, ETA 00:02:09
Forking using command: [C:\Program Files\Eclipse Adoptium\jdk-21.0.2.13-hotspot\bin\java.exe, -XX:+UnlockDiagnosticVMOptions, -XX:+UnlockExperimentalVMOptions, -DcompilerBlackholesEnabled=true, -XX:CompileCommandFile=C:\Users\omni_\AppData\Local\Temp\jmh10768649944801232063compilecommand, -cp, "target\javazone.jar", org.openjdk.jmh.runner.ForkedMain, 127.0.0.1, 61838]
# Fork: 1 of 2
System.gc() executed
# Warmup Iteration   1: 597.672 ns/op
System.gc() executed
# Warmup Iteration   2: 380.786 ns/op
System.gc() executed
# Warmup Iteration   3: 384.635 ns/op
System.gc() executed
Iteration   1: 367.967 ns/op
System.gc() executed
Iteration   2: 371.395 ns/op
System.gc() executed
Iteration   3: 358.284 ns/op

# Run progress: 41.67% complete, ETA 00:01:53
Forking using command: [C:\Program Files\Eclipse Adoptium\jdk-21.0.2.13-hotspot\bin\java.exe, -XX:+UnlockDiagnosticVMOptions, -XX:+UnlockExperimentalVMOptions, -DcompilerBlackholesEnabled=true, -XX:CompileCommandFile=C:\Users\omni_\AppData\Local\Temp\jmh10768649944801232063compilecommand, -cp, "target\javazone.jar", org.openjdk.jmh.runner.ForkedMain, 127.0.0.1, 61838]
# Fork: 2 of 2
System.gc() executed
# Warmup Iteration   1: 560.629 ns/op
System.gc() executed
# Warmup Iteration   2: 389.253 ns/op
System.gc() executed
# Warmup Iteration   3: 399.771 ns/op
System.gc() executed
Iteration   1: 373.918 ns/op
System.gc() executed
Iteration   2: 454.583 ns/op
System.gc() executed
Iteration   3: 388.884 ns/op


Result "com.kenfogel.performance.loaders.MapTests_jmh.do03HashMapSearch":
  385.838 ±(99.9%) 98.462 ns/op [Average]
  (min, avg, max) = (358.284, 385.838, 454.583), stdev = 35.113
  CI (99.9%): [287.376, 484.300] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-LTS
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-21.0.2.13-hotspot\bin\java.exe
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 2 s each
# Measurement: 3 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.kenfogel.performance.loaders.MapTests_jmh.do04LoadTreeMap

# Run progress: 50.00% complete, ETA 00:01:37
Forking using command: [C:\Program Files\Eclipse Adoptium\jdk-21.0.2.13-hotspot\bin\java.exe, -XX:+UnlockDiagnosticVMOptions, -XX:+UnlockExperimentalVMOptions, -DcompilerBlackholesEnabled=true, -XX:CompileCommandFile=C:\Users\omni_\AppData\Local\Temp\jmh10768649944801232063compilecommand, -cp, "target\javazone.jar", org.openjdk.jmh.runner.ForkedMain, 127.0.0.1, 61844]
# Fork: 1 of 2
System.gc() executed
# Warmup Iteration   1: 134344.107 ns/op
System.gc() executed
# Warmup Iteration   2: 120081.540 ns/op
System.gc() executed
# Warmup Iteration   3: 118176.101 ns/op
System.gc() executed
Iteration   1: 121378.072 ns/op
System.gc() executed
Iteration   2: 119759.004 ns/op
System.gc() executed
Iteration   3: 121780.157 ns/op

# Run progress: 58.33% complete, ETA 00:01:21
Forking using command: [C:\Program Files\Eclipse Adoptium\jdk-21.0.2.13-hotspot\bin\java.exe, -XX:+UnlockDiagnosticVMOptions, -XX:+UnlockExperimentalVMOptions, -DcompilerBlackholesEnabled=true, -XX:CompileCommandFile=C:\Users\omni_\AppData\Local\Temp\jmh10768649944801232063compilecommand, -cp, "target\javazone.jar", org.openjdk.jmh.runner.ForkedMain, 127.0.0.1, 61844]
# Fork: 2 of 2
System.gc() executed
# Warmup Iteration   1: 135736.248 ns/op
System.gc() executed
# Warmup Iteration   2: 118341.887 ns/op
System.gc() executed
# Warmup Iteration   3: 119026.645 ns/op
System.gc() executed
Iteration   1: 125432.304 ns/op
System.gc() executed
Iteration   2: 119444.645 ns/op
System.gc() executed
Iteration   3: 118027.058 ns/op


Result "com.kenfogel.performance.loaders.MapTests_jmh.do04LoadTreeMap":
  120970.207 ±(99.9%) 7224.704 ns/op [Average]
  (min, avg, max) = (118027.058, 120970.207, 125432.304), stdev = 2576.399
  CI (99.9%): [113745.502, 128194.911] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-LTS
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-21.0.2.13-hotspot\bin\java.exe
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 2 s each
# Measurement: 3 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.kenfogel.performance.loaders.MapTests_jmh.do05AddToTreeMap

# Run progress: 66.67% complete, ETA 00:01:04
Forking using command: [C:\Program Files\Eclipse Adoptium\jdk-21.0.2.13-hotspot\bin\java.exe, -XX:+UnlockDiagnosticVMOptions, -XX:+UnlockExperimentalVMOptions, -DcompilerBlackholesEnabled=true, -XX:CompileCommandFile=C:\Users\omni_\AppData\Local\Temp\jmh10768649944801232063compilecommand, -cp, "target\javazone.jar", org.openjdk.jmh.runner.ForkedMain, 127.0.0.1, 61855]
# Fork: 1 of 2
System.gc() executed
# Warmup Iteration   1: 316.300 ns/op
System.gc() executed
# Warmup Iteration   2: 285.652 ns/op
System.gc() executed
# Warmup Iteration   3: 250.876 ns/op
System.gc() executed
Iteration   1: 252.597 ns/op
System.gc() executed
Iteration   2: 245.839 ns/op
System.gc() executed
Iteration   3: 246.698 ns/op

# Run progress: 75.00% complete, ETA 00:00:48
Forking using command: [C:\Program Files\Eclipse Adoptium\jdk-21.0.2.13-hotspot\bin\java.exe, -XX:+UnlockDiagnosticVMOptions, -XX:+UnlockExperimentalVMOptions, -DcompilerBlackholesEnabled=true, -XX:CompileCommandFile=C:\Users\omni_\AppData\Local\Temp\jmh10768649944801232063compilecommand, -cp, "target\javazone.jar", org.openjdk.jmh.runner.ForkedMain, 127.0.0.1, 61855]
# Fork: 2 of 2
System.gc() executed
# Warmup Iteration   1: 329.923 ns/op
System.gc() executed
# Warmup Iteration   2: 289.179 ns/op
System.gc() executed
# Warmup Iteration   3: 241.160 ns/op
System.gc() executed
Iteration   1: 250.485 ns/op
System.gc() executed
Iteration   2: 247.105 ns/op
System.gc() executed
Iteration   3: 241.933 ns/op


Result "com.kenfogel.performance.loaders.MapTests_jmh.do05AddToTreeMap":
  247.443 ±(99.9%) 10.449 ns/op [Average]
  (min, avg, max) = (241.933, 247.443, 252.597), stdev = 3.726
  CI (99.9%): [236.994, 257.891] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-LTS
# VM invoker: C:\Program Files\Eclipse Adoptium\jdk-21.0.2.13-hotspot\bin\java.exe
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 2 s each
# Measurement: 3 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.kenfogel.performance.loaders.MapTests_jmh.do06TreeMapSearch

# Run progress: 83.33% complete, ETA 00:00:32
Forking using command: [C:\Program Files\Eclipse Adoptium\jdk-21.0.2.13-hotspot\bin\java.exe, -XX:+UnlockDiagnosticVMOptions, -XX:+UnlockExperimentalVMOptions, -DcompilerBlackholesEnabled=true, -XX:CompileCommandFile=C:\Users\omni_\AppData\Local\Temp\jmh10768649944801232063compilecommand, -cp, "target\javazone.jar", org.openjdk.jmh.runner.ForkedMain, 127.0.0.1, 61862]
# Fork: 1 of 2
System.gc() executed
# Warmup Iteration   1: 1636.348 ns/op
System.gc() executed
# Warmup Iteration   2: 1432.851 ns/op
System.gc() executed
# Warmup Iteration   3: 1436.826 ns/op
System.gc() executed
Iteration   1: 1387.983 ns/op
System.gc() executed
Iteration   2: 1332.113 ns/op
System.gc() executed
Iteration   3: 1370.764 ns/op

# Run progress: 91.67% complete, ETA 00:00:16
Forking using command: [C:\Program Files\Eclipse Adoptium\jdk-21.0.2.13-hotspot\bin\java.exe, -XX:+UnlockDiagnosticVMOptions, -XX:+UnlockExperimentalVMOptions, -DcompilerBlackholesEnabled=true, -XX:CompileCommandFile=C:\Users\omni_\AppData\Local\Temp\jmh10768649944801232063compilecommand, -cp, "target\javazone.jar", org.openjdk.jmh.runner.ForkedMain, 127.0.0.1, 61862]
# Fork: 2 of 2
System.gc() executed
# Warmup Iteration   1: 1649.006 ns/op
System.gc() executed
# Warmup Iteration   2: 1360.629 ns/op
System.gc() executed
# Warmup Iteration   3: 1375.138 ns/op
System.gc() executed
Iteration   1: 1374.918 ns/op
System.gc() executed
Iteration   2: 1384.733 ns/op
System.gc() executed
Iteration   3: 1385.824 ns/op


Result "com.kenfogel.performance.loaders.MapTests_jmh.do06TreeMapSearch":
  1372.723 ±(99.9%) 58.909 ns/op [Average]
  (min, avg, max) = (1332.113, 1372.723, 1387.983), stdev = 21.008
  CI (99.9%): [1313.813, 1431.632] (assumes normal distribution)


# Run complete. Total time: 00:03:14

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                       Mode  Cnt       Score      Error  Units
MapTests_jmh.do01LoadHashMap    avgt    6   27326.692 ± 2833.585  ns/op
MapTests_jmh.do02AddToHashMap   avgt    6     134.026 ±   18.373  ns/op
MapTests_jmh.do03HashMapSearch  avgt    6     385.838 ±   98.462  ns/op
MapTests_jmh.do04LoadTreeMap    avgt    6  120970.207 ± 7224.704  ns/op
MapTests_jmh.do05AddToTreeMap   avgt    6     247.443 ±   10.449  ns/op
MapTests_jmh.do06TreeMapSearch  avgt    6    1372.723 ±   58.909  ns/op
